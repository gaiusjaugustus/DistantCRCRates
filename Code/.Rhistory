plot(VD3 ~ VitD3_MetabCS, data=VitD)
model <- lm(VD3 ~ log(VitD3_MetabCS), data=VitD)
summary(model)
plot(VD3 ~ log(VitD3_MetabCS), data=VitD)
model <- lm(VD3 ~ log(VitD3_MetabCS), data=VitD)
summary(model)
cor(x=VitD$VD3, y=VitD3_MetabCS, method="spearman")
model <- lm(VD3 ~ log(VitD3_MetabCS), data=VitD)
summary(model)
cor(x=VitD$VD3, y=log(VitD$VitD3_MetabCS), method="spearman")
plot(VD3 ~ log(VitD3_MetabCS), data=VitD)
model <- lm(VD3 ~ log(VitD3_MetabCS), data=VitD)
summary(model)
cor(x=VitD$VD3, y=VitD$VitD3_MetabCS, method="spearman")
plot(VD3 ~ log(VitD3_MetabCS), data=VitD)
is.na(VitD$VitD3_MetabCS)
sum(is.na(VitD$VitD3_MetabCS))
VitD$VitD3_MetabCS <- log(VitD$VitD3_MetabCS)
sum(is.na(VitD$VitD3_MetabCS))
VitD$VitD3_MetabCS[is.na(VitD$VitD3_MetabCS)] <- 0
sum(is.na(VitD$VitD3_MetabCS))
model <- lm(VD3 ~ log(VitD3_MetabCS), data=VitD)
model <- lm(VD3 ~ VitD3_MetabCS, data=VitD)
summary(model)
cor(x=VitD$VD3, y=VitD$VitD3_MetabCS, method="spearman")
plot(VD3 ~ log(VitD3_MetabCS), data=VitD)
model <- lm(VD3 ~ VitD3_MetabCS, data=VitD)
summary(model)
cor(x=VitD$VD3, y=VitD$VitD3_MetabCS, method="spearman")
plot(VD3 ~ VitD3_MetabCS, data=VitD)
library(ggplot2)
ggplot(VitD, aes(VD3, VitD3_MetabCS)) + geom_point() + geom_smooth(method="lm")
ggplot(VitD, aes(VD3, VitD3_Metabolomics)) + geom_point() + geom_smooth(method="lm")
ggplot(VitD, aes(VD3, VitD3_MetabCS)) + geom_point() + geom_smooth(method="lm")
ggplot(VitD, aes(VD3, VitD3_Metabolomics)) + geom_point() + geom_smooth(method="lm")
GENDERowdy <- read_delim("~/Downloads/GENDERowdy Picnic & Play Day Survey (Responses) - Form Responses 1.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(readr)
GENDERowdy <- read_delim("~/Downloads/GENDERowdy Picnic & Play Day Survey (Responses) - Form Responses 1.tsv",
"\t", escape_double = FALSE, trim_ws = TRUE)
View(GENDERowdy)
Positive <- readxl::read_excel("Z:/Austin/2017_EllisRotationProject_Austin/Data/01_RawData/EllisPositiveIDs.xlsx")
Positive %>% filter(`Compound ID` == "VITAMIN D2")
library(dplyr)
Positive %>% filter(`Compound ID` == "VITAMIN D2")
Positive %>% filter(`Compound ID` == "VITAMIN D2")
Positive %>% filter(`Compound ID` == "VITAMIN D2") %>% dim()
grep(pattern = "VITAMIN", x = Positive$`Compound ID`)
grep(pattern = "VITAMIN", x = Positive$Description)
View(Positive)
Negative <- readxl::read_excel("Z:/Austin/2017_EllisRotationProject_Austin/Data/01_RawData/EllisNegativeIDs.xlsx")
grep(pattern = "VITAMIN", x = Negative$Description)
grep(pattern = "VITAMIN", x = Negative$`Compound ID`)
Negative %>% filter(grep(pattern = "VITAMIN", x = Negative$`Compound ID`))
Negative %>% subset(grep(pattern = "VITAMIN", x = Negative$`Compound ID`))
Negative[grep(pattern = "VITAMIN", x = Negative$`Compound ID`)),]
Negative[grep(pattern = "VITAMIN", x = Negative$`Compound ID`)]
Negative[grep(pattern = "VITAMIN", x = Negative$`Compound ID`),]
library(tidyr)
Positive %>% filter(`Retention time (min)` > 11.6 & `Retention time (min)` < 12.6)
Positive %>% filter(`Retention time (min)` > 12 & `Retention time (min)` < 12.2)
Positive %>% filter(`Retention time (min)` > 12 & `Retention time (min)` < 12.2) %>% arrange(Description)
Positive %>% filter(`Retention time (min)` > 12.05 & `Retention time (min)` < 12.15) %>% arrange(Description)
CloseToD2[grep(pattern = "iferol", x=CloseToD2$Description),]
CloseToD2 <- Positive %>% filter(`Retention time (min)` > 12.05 & `Retention time (min)` < 12.15) %>% arrange(Description)
CloseToD2
CloseToD2[grep(pattern = "iferol", x=CloseToD2$Description),]
CloseToD2[grep(pattern = "iferol", x=CloseToD2$Description),]
CloseToD2[grep(pattern = "chole", x=CloseToD2$Description),]
CloseToD2[grep(pattern = "vit", x=CloseToD2$Description),]
Positive[grep(pattern = "VITAMIN", x = Positive$`Compound ID`),]
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(cowplot)
CRCStages <- readr::read_delim("K:/SEER_DataTables/SEER_2000-2014_StageDistribution_noStratify.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
colnames(CRCStages) <- c("Year", "Stage","Rate", "Count", "Population")
CRCStages <- CRCStages %>% filter(Year != "2000-2014")
CRCStages$Year <- as.numeric(CRCStages$Year)
CRCStages2 <- CRCStages %>% filter(Stage %in% c("Distant","Localized","Regional","Unknown/unstaged"))
Groups <- CRCStages2 %>% group_by(Year) %>% summarize(totalcases = sum(Rate))
CRCStages3 <- CRCStages2 %>% left_join(Groups, by=c("Year"))
CRCStages3$Stage <- factor(CRCStages3$Stage, levels=c("Unknown/unstaged","Localized","Regional","Distant"))
CRCStages3
library(readxl)
Stage_JPs <- read_excel("U:/Box Sync/ProjectDocs/2017_DistantCRC/JoinPoint/Rate_StageOnly.xlsx", sheet=1) %>% rename("Year" = "X Value", "Model" = "Modeleded Y Value") %>% mutate(Year = as.integer(Year), Model = as.numeric(Model))
colorclasses <- c("Localized" = "#016b0b", "Distant" = "#be0306", "Regional" = "#ffb401")
shapes <- c(15, 17, 8)
lwds <- c(3, 4, 2, 1)
LegendPlot <- ggplot() +
geom_point(data=CRCStages3, aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage)) +
geom_line(data=Stage_JPs, aes(x=Year, y=Model, group=Stage, col=Stage))+
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() + theme(axis.text.x = element_text(angle=45, vjust=0.5), legend.position = "bottom") +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
ylab("Rate per 100,000") +
ggtitle("All CRC Case Incidence Rates by Disease Stage")
LegendPlot
Figure1A <- ggplot() +
geom_point(data=CRCStages3 %>% filter(Stage %in% c("Localized","Regional","Distant")), aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage), show.legend = FALSE) +
geom_line(data=Stage_JPs, aes(x=Year, y=Model, group=Stage, col=Stage), show.legend = FALSE) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() + theme(axis.text.x = element_text(angle=45, vjust=0.5), legend.position = "bottom") +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
ylab("Rate per 100,000")
Figure1A
Figure1Export <- ggplot() +
geom_point(data=(CRCStages3 %>% filter(Stage %in% c("Localized","Regional","Distant"))), aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage)) +
geom_line(data=Stage_JPs, aes(x=Year, y=Model, group=Stage, col=Stage)) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014),
labels = c("1998", "2000", "2005", "2010", "2014"),
minor_breaks = seq(1998,2014,1)) +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
ylab("Incidence rate (per 100,000)") +
theme_classic() +
theme(
legend.position = "bottom",
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size=10),
legend.title.align = 0.5,
axis.title = element_text(size = 12, face="bold"),
axis.text = element_text(size=10),
axis.text.x = element_text(angle=45, vjust=0.5)
)
Figure1Export
#ggsave(plot=Figure1Export, filename="Figure1.tiff", path="C:/Users/gaugustus/Documents/Success_Docs/Pubs/DistantCRC_BriefComm", device = "tiff", width=16, height=10, units="cm", dpi = 300)
CRCStages3 %>% head()
CRCStages3 %>% filter(Year %in% c(2000,2014))
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(cowplot)
CRCStages <- readr::read_delim("K:/SEER_DataTables/SEER_2000-2014_StageDistribution_noStratify.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
colnames(CRCStages) <- c("Year", "Stage","Rate", "Count", "Population")
CRCStages <- CRCStages %>% filter(Year != "2000-2014")
CRCStages$Year <- as.numeric(CRCStages$Year)
CRCStages2 <- CRCStages %>% filter(Stage %in% c("Distant","Localized","Regional","Unknown/unstaged"))
Groups <- CRCStages2 %>% group_by(Year) %>% summarize(totalcases = sum(Rate))
CRCStages3 <- CRCStages2 %>% left_join(Groups, by=c("Year")) %>% mutate(Proportions = Rate/totalcases)
CRCStages3$Stage <- factor(CRCStages3$Stage, levels=c("Unknown/unstaged","Localized","Regional","Distant"))
CRCStages3$Proportions[is.nan(CRCStages3$Proportions)] <- 0
CRCStages3
colorclasses <- c("Localized" = "#016b0b","Unknown/unstaged" = "#000000","Distant" = "#be0306","Regional" = "#ffb401")
shapes <- c(15, 16, 17, 8)
lwds <- c(3, 4, 2, 1)
LegendPlot <- ggplot(CRCStages3, aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage)) +
geom_point() +
geom_smooth(method="lm", se=FALSE) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() + theme(axis.text.x = element_text(angle=45, vjust=0.5), legend.position = "bottom") +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
scale_y_log10(labels=comma, breaks = c(2,3,4,5,10,15, 20)) +
ylab("Rate per 100,000") +
ggtitle("All CRC Case Incidence Rates by Disease Stage")
LegendPlot
Figure1A <- ggplot(CRCStages3, aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage)) +
geom_point(show.legend = FALSE) +
geom_smooth(method="lm", se=FALSE, show.legend = FALSE) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() + theme(axis.text.x = element_text(angle=45, vjust=0.5)) +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
scale_y_log10(labels=comma, breaks = c(2,3,4,5,10,15, 20)) +
ylab("Rate per 100,000") #+
#ggtitle("All CRC Case Incidence Rates by Disease Stage")
Figure1A
Figure1B <- ggplot(CRCStages3, aes(x=Year, y=Proportions, group=Stage, col=Stage, shape=Stage)) +
geom_point(show.legend = FALSE) +
geom_smooth(method="lm", se=FALSE, show.legend = FALSE) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() +
theme(axis.text.x = element_text(angle=45, vjust=0.5)) +
scale_color_manual(name="Stage", values = colorclasses) +
scale_y_continuous(labels=percent) +
scale_shape_manual(values=shapes) +
ylab("Percent of total incidence rate") #+
#ggtitle("All CRC Case Proportions in Disease Stage")
Figure1B
CRCStages3 %>% filter(Year %in% c(2000,2014))
library(readr)
Flattened_metadata <- read_delim("K:/TCGA_RNAseq_Data/OtherDocs/Flattened_metadata.txt",
"\t", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
pg <- read_xml("K:/TCGA_ClinicalData/2017-12-07_COADREAD_Download/005ace64-cbe1-46d6-925a-8fc8fe65af1f/nationwidechildrens.org_clinical.TCGA-A6-3807.xml")
library(xml2)
pg <- read_xml("K:/TCGA_ClinicalData/2017-12-07_COADREAD_Download/005ace64-cbe1-46d6-925a-8fc8fe65af1f/nationwidechildrens.org_clinical.TCGA-A6-3807.xml")
# get all the <record>s
recs <- xml_find_all(pg, "//clin_shared:tumor_tissue_site")
recs
# extract and clean all the columns
vals <- trimws(xml_text(recs))
# extract and clean (if needed) the area names
labs <- trimws(xml_attr(recs, "label"))
# mine the column names from the two variable descriptions
# this XPath construct lets us grab either the <categ…> or <real…> tags
# and then grabs the 'name' attribute of them
cols <- xml_attr(xml_find_all(pg, "//data/variables/*[self::categoricalvariable or
self::realvariable]"), "name")
# this converts each set of <record> columns to a data frame
# after first converting each row to numeric and assigning
# names to each column (making it easier to do the matrix to data frame conv)
dat <- do.call(rbind, lapply(strsplit(vals, "\ +"),
function(x) {
data.frame(rbind(setNames(as.numeric(x),cols)))
}))
labs
as_list(pg)
pg_list <- as_list(pg)
pg_list$patient$additional_studies
pg_list$patient$tumor_tissue_site
library(TCGAbiolinks)
install.packages("dplyr")
install.packages("dplyr")
library(TCGAbiolinks)
query <- GDCquery(project = "TCGA-COAD",
data.category = "Transcriptome Profiling",
daya.type="Gene Expression Quantification",
workflow.type = "HTSeq - Counts")
query <- GDCquery(project = "TCGA-COAD",
data.category = "Transcriptome Profiling",
data.type="Gene Expression Quantification",
workflow.type = "HTSeq - Counts")
query
clin.query <- GDCquery(project = "TCGA-COAD", data.category = "Clinical")
clinical.index <- GDCquery_clinic("TCGA-COAD")
clin.query <- GDCquery(project = "TCGA-COAD", data.category = "Clinical")
json <- tryCatch((GDCdownload(clin.query),
clin.query <- GDCquery(project = "TCGA-COAD", data.category = "Clinical")
json <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method="client")))
clin.query <- GDCquery(project = "TCGA-COAD", data.category = "Clinical")
json <- tryCatch(GDCdownload(clin.query),
error = function(e) GDCdownload(clin.query, method="client"))
clinical.patient <- GDCprepare_clinic(clin.query, clinical.info = "patient")
clinical.patient.followup <- GDCprepare_clinic(clin.query, clinical.info = "follow_up")
clinical.index <- GDCquery_clinic("TCGA-COAD")
list.files("K:\CCCC_CNV_Analysis\2017-05-30_sicnLOHplots\Figures\validated\definitely")
list.files("K:/CCCC_CNV_Analysis/2017-05-30_sicnLOHplots/Figures/validated/definitely")
sicnLOH_files <- list.files("K:/CCCC_CNV_Analysis/2017-05-30_sicnLOHplots/Figures/validated/definitely")
dim(sicnLOH_files)
length(sicnLOH_files)
separated <- strsplit(x = sicnLOH_files, split = "_")
separated
sicnLOHs <- data.frame(Filename=sicnLOH_files)
sicnLOHs <- data.frame(Filename=sicnLOH_files)
dim(sicnLOHs)
library(dplyr)
library(tidyr)
sicnLOH_files[1]
sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), remove = FALSE)
sicnLOHs$Filename <- gsub("-",".", sicnLOHs$Filename)
table(sicnLOHs$Filename)
sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), remove = FALSE)
sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), sep = "_", remove = FALSE)
sicnLOHs <- data.frame(Filename=sicnLOH_files)
dim(sicnLOHs)
sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), sep = "_", remove = FALSE)
sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), sep = "_", remove = FALSE) %>% separate(Suffix, c("Location","png"), sep=".")
sicnLOHs <- sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), sep = "_", remove = FALSE)
sicnLOHs %>% separate(Suffix, c("Location","png"), sep=".") %>% select(-png, -sicnLOH)
sicnLOHs
sicnLOHs %>% separate(Suffix, c("Location","png"), sep="\.") %>% select(-png, -sicnLOH)
?separate
sicnLOHs %>% separate(Suffix, c("Location","png") ) %>% select(-png, -sicnLOH)
sicnLOHs %>% separate(Suffix, c("Location","png"), sep="[.]", ) %>% select(-png, -sicnLOH)
sicnLOHs <- sicnLOHs %>% separate(Suffix, c("ApproxLocation","png"), sep="[.]", ) %>% select(-png, -sicnLOH)
sicnLOHs %>% distinct(Sample) %>% tally
sicnLOHs %>% group_by(Sample) %>% tally
13+3+5+2+1
sicnLOHs %>% group_by(Chromosome) %>% tally
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 7)
sicnLOHs %>% group_by(Chromosome) %>% tally %>% arrange(n)
sicnLOHs %>% group_by(Chromosome) %>% tally %>% arrange(desc(n))
cat("Chromosome 7")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 7)
cat("Chromosome 2")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 2)
cat("Chromosome 8")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 8)
cat("Chromosome 1")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 1)
cat("Chromosome 3")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 3)
cat("Chromosome 5")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 5)
library(dplyr)
library(tidyr)
sicnLOH_files <- list.files("K:/CCCC_CNV_Analysis/2017-05-30_sicnLOHplots/Figures/validated/definitely")
length(sicnLOH_files)
sicnLOHs <- data.frame(Filename=sicnLOH_files)
dim(sicnLOHs)
sicnLOHs <- sicnLOHs %>% separate(Filename, c("sicnLOH","Sample","Chromosome","Suffix"), sep = "_", remove = FALSE)
sicnLOHs <- sicnLOHs %>% separate(Suffix, c("ApproxLocation","png"), sep="[.]") %>% select(-png, -sicnLOH)
sicnLOHs %>% distinct(Sample) %>% tally
sicnLOHs %>% group_by(Sample) %>% tally
sicnLOHs %>% group_by(Chromosome) %>% tally %>% arrange(desc(n))
cat("Chromosome 7")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 7)
cat("Chromosome 2")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 2)
cat("Chromosome 8")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 8)
cat("Chromosome 1")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 1)
cat("Chromosome 3")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 3)
cat("Chromosome 5")
table(sicnLOHs$Sample, sicnLOHs$Chromosome == 5)
464+31
list.files("K:/CCCC_CNV_Data/NormalSamples/CHPtxt/Segments/CN")
library(readr)
CCCC_Mutations <- read_delim("Documents/DataFromOthers/Zarko/2016-09-26_Results_of_all_available_samples.mutations.geneannotated.txt",
"\t", escape_double = FALSE, trim_ws = TRUE)
library(dplyr)
distinct(CCCC_Mutations$Matched_Norm_Sample_Barcode)
unique(CCCC_Mutations$Matched_Norm_Sample_Barcode)
View(CCCC_Mutations)
unique(CCCC_Mutations$Tumor_Sample_Barcode)
Samples <- c("C1"="UICE_0043", "10009.F95"="UICE_0005", "R27"="UICE_0045","U83"=NA, "20018"="UICE_0059")
MutationTypes <- c("Missense_Mutation","Nonsense_Mutation","Splice_Site","Translation_Start_Site")
Samples <- c("C1"="UICE_0043", "10009.F95"="UICE_0005", "R27"="UICE_0045","U83"=NA, "20018"="UICE_0059")
MutationTypes <- c("Missense_Mutation","Nonsense_Mutation","Splice_Site","Translation_Start_Site")
Filter1 <- CCCC_Mutations %>% filter(Tumor_Sample_Barcode %in% Samples) %>% filter(Variant_Classification %in% MutationTypes)
Filter1 %>% group_by(Tumor_Sample_Barcode) %>% tally()
Filter1 %>% group_by(Tumor_Sample_Barcode, Hugo_Symbol) %>% distinct(Hugo_Symbol) %>% tally() %>% filter(n>1)
Filter1 %>% group_by(Tumor_Sample_Barcode, Hugo_Symbol) %>% distinct(Hugo_Symbol)
Filter1 %>% group_by(Tumor_Sample_Barcode, Hugo_Symbol) %>% distinct(Hugo_Symbol) %>% ungroup() %>% group_by(Hugo_Symbol) %>% tally() %>% filter(n>1)
Filter1 %>% filter(Hugo_Symbol %in% c("APC","CNTNAP5"))
Filter1 %>% filter(Hugo_Symbol %in% c("APC","CNTNAP5")) %>% select(Hugo_Symbol, Start_Position, Amino_Acid_Change, Exon_Number)
################################################################################
# DNA methylation analysis of TCGA CRC sample subset with RnBeads
# 2018-03-29
# ------------------------------------------------------------------------------
#  Vanilla analysis of the TCGA CRC sample subset of 450K data
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# created: 2018-03-28
# author:  Gaius J Augustus (gaiusjaugustus@email.arizona.edu)
# Following vanilla tutorial for RNBeads
# http://rnbeads.mpi-inf.mpg.de/
################################################################################
################################################################################
# (0) Preliminaries
################################################################################
# load the package
library(RnBeads)
# define the directory structure
# setwd(".")
dataDir <- file.path("K:/TCGA_Meth_Data")
resultDir <- file.path("K:/TCGA_Meth_Analysis")
# dataset and file locations
datasetDir <- file.path(dataDir, "2017-12-06_HM450_idats")
sampleSheet <- file.path(resultDir, "2018-03-27_ListOfSamplesSansDups/SamplesToUse_DupsRem.tsv")
reportDir <- file.path(resultDir, "2018-03-29_RnBeadsVanillaAnalysis_SimpSampleSheet")
################################################################################
# (1) Set analysis options
################################################################################
rnb.options(
filtering.sex.chromosomes.removal = TRUE,
identifiers.column                = "cases.0.submitter_id",
import.table.separator            = "\t"
)
# optionally disable some parts of the analysis to reduce runtime
rnb.options(
#exploratory.correlation.qc        = FALSE,
#exploratory.intersample           = FALSE,
# exploratory.region.profiles      = c("genes"),
#exploratory.region.profiles       = character(0),
exploratory.clustering             = "top",
exploratory.clustering.top.sites   = 100,
#region.types                      = c("promoters", "genes", "tiling"),
region.types                       = c("promoters", "genes", "cpgislands", "tiling"),
#differential.report.sites         = FALSE,
differential.comparison.columns    = c("Status","APCyesno")
)
################################################################################
# (2) Run the analysis
################################################################################
rnb.run.analysis(
dir.reports=reportDir,
sample.sheet=sampleSheet,
data.dir=datasetDir,
data.type="idat.dir"
)
?annotation
library(RnBeads)
?annotation
?annotation
?RnBeads::rnb.options
file.path("vol_d", "analysis")
this.dir <- dirname(parent.frame(2)$ofile)
?parent.frame
parent.frame(n=1)
parent.frame(n=2)
summary(parent.frame(n=2))
setwd("U:/Box Sync/Distant CRC - JNCI Brief Comm/DistantCRCRates/Code")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
library(readxl)
library(cowplot)
library(readxl)
Early_JP <- read_excel("../Data/JoinPoint/Rate_StageEarly.xlsx") %>% rename("Year" = "X Value", "Model" = "Modeleded Y Value", "Rate" = "Observed Y Value") %>% mutate(Year = as.integer(Year), Model = as.numeric(Model), Rate = as.numeric(Rate), AgeCategory = "Early")
Middle_JP <- read_excel("../Data/JoinPoint/Rate_StageMiddle.xlsx") %>% rename("Year" = "X Value", "Model" = "Modeleded Y Value", "Rate" = "Observed Y Value") %>% mutate(Year = as.integer(Year), Model = as.numeric(Model), Rate = as.numeric(Rate), AgeCategory = "Middle")
Late_JP <- read_excel("../Data/JoinPoint/Rate_StageLate.xlsx") %>% rename("Year" = "X Value", "Model" = "Modeleded Y Value", "Rate" = "Observed Y Value") %>% mutate(Year = as.integer(Year), Model = as.numeric(Model), Rate = as.numeric(Rate), AgeCategory = "Late")
AllAges_JP <- rbind(Early_JP, Middle_JP, Late_JP)
AllAges_JP$AgeCategory <- factor(AllAges_JP$AgeCategory, levels = c("Early","Middle","Late"))
colorclasses <- c("Localized" = "#016b0b","Distant" = "#be0306","Regional" = "#ffb401")
shapes <- c(8, 15, 17)
lwds <- c(3, 4, 2, 1)
Figure2A <- ggplot() +
geom_point(data=AllAges_JP, aes(x=Year, y=Rate, col=Stage, group=Stage, shape=Stage), size=2) +
geom_line(data = AllAges_JP, aes(x=Year, y=Model, group=Stage, col=Stage)) +
facet_wrap( ~ AgeCategory, scales = "free_y") +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
ylab("Incidence rate (per 100,000)")
Figure2A_themed <- Figure2A +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
theme_classic() +
theme(
legend.position = "none",
axis.title = element_text(size = 12, face="bold"),
axis.text = element_text(size=10),
axis.text.x = element_text(angle=45, vjust=0.5)
)
Figure2A_themed
Prox_JP <- read_excel("../Data/JoinPoint/Rate_StageProximal.xlsx") %>% rename("Year" = "X Value", "Rate" = "Observed Y Value", "Model" = "Modeleded Y Value") %>% mutate(Year = as.integer(Year), Rate = as.numeric(Rate), Model = as.numeric(Model), Side = "Proximal")
Dist_JP <- read_excel("../Data/JoinPoint/Rate_StageDistal.xlsx") %>% rename("Year" = "X Value", "Rate" = "Observed Y Value", "Model" = "Modeleded Y Value") %>% mutate(Year = as.integer(Year), Rate = as.numeric(Rate), Model = as.numeric(Model), Side = "Distal")
AllSides_JP <- rbind(Prox_JP, Dist_JP)
AllSides_JP$Side <- factor(AllSides_JP$Side, levels=c("Proximal","Distal"))
AllSides_JP$Stage <- factor(AllSides_JP$Stage, levels = c("Localized","Regional","Distant"))
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
# Read in SEER extracted table
CRCStages <- readr::read_delim("../SEER_2000-2014_StageDistribution_noStratify.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
# Read in SEER extracted table
CRCStages <- readr::read_delim("../Data/SEER_2000-2014_StageDistribution_noStratify.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
colnames(CRCStages) <- c("Year", "Stage","Rate", "Count", "Population")
CRCStages <- CRCStages %>% filter(Year != "2000-2014")
CRCStages$Year <- as.numeric(CRCStages$Year)
CRCStages2 <- CRCStages %>% filter(Stage %in% c("Distant","Localized","Regional","Unknown/unstaged"))
# Read in General CRC rate data
Stage_JPs <- read_excel("../Data/JoinPoint/Rate_StageOnly.xlsx", sheet=1) %>% rename("Year" = "X Value", "Model" = "Modeleded Y Value") %>% mutate(Year = as.integer(Year), Model = as.numeric(Model))
Figure2A <- ggplot() +
geom_point(data=CRCStages3 %>% filter(Stage %in% c("Localized","Regional","Distant")), aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage), show.legend = FALSE) +
geom_line(data=Stage_JPs, aes(x=Year, y=Model, group=Stage, col=Stage), show.legend = FALSE) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() + theme(axis.text.x = element_text(angle=45, vjust=0.5), legend.position = "bottom") +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
ylab("Rate per 100,000")
library(ggplot2)
library(readr)
library(dplyr)
library(scales)
# Read in SEER extracted table
CRCStages <- readr::read_delim("../Data/SEER_2000-2014_StageDistribution_noStratify.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
colnames(CRCStages) <- c("Year", "Stage","Rate", "Count", "Population")
CRCStages <- CRCStages %>% filter(Year != "2000-2014")
CRCStages$Year <- as.numeric(CRCStages$Year)
CRCStages2 <- CRCStages %>% filter(Stage %in% c("Distant","Localized","Regional","Unknown/unstaged"))
Groups <- CRCStages2 %>% group_by(Year) %>% summarize(totalcases = sum(Rate))
CRCStages3 <- CRCStages2 %>% left_join(Groups, by=c("Year"))
CRCStages3$Stage <- factor(CRCStages3$Stage, levels=c("Unknown/unstaged","Localized","Regional","Distant"))
CRCStages3
library(readxl)
# Read in General CRC rate data
Stage_JPs <- read_excel("../Data/JoinPoint/Rate_StageOnly.xlsx", sheet=1) %>% rename("Year" = "X Value", "Model" = "Modeleded Y Value") %>% mutate(Year = as.integer(Year), Model = as.numeric(Model))
colorclasses <- c("Localized" = "#016b0b", "Distant" = "#be0306", "Regional" = "#ffb401")
shapes <- c(15, 17, 8)
lwds <- c(3, 4, 2, 1)
Figure2A <- ggplot() +
geom_point(data=CRCStages3 %>% filter(Stage %in% c("Localized","Regional","Distant")), aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage), show.legend = FALSE) +
geom_line(data=Stage_JPs, aes(x=Year, y=Model, group=Stage, col=Stage), show.legend = FALSE) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014), labels = c("1998", "2000", "2005", "2010", "2014"), minor_breaks = seq(1998,2014,1)) +
theme_classic() + theme(axis.text.x = element_text(angle=45, vjust=0.5), legend.position = "bottom") +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
ylab("Rate per 100,000")
Figure2A
Figure2Export <- ggplot() +
geom_point(data=(CRCStages3 %>% filter(Stage %in% c("Localized","Regional","Distant"))), aes(x=Year, y=Rate, group=Stage, col=Stage, shape=Stage)) +
geom_line(data=Stage_JPs, aes(x=Year, y=Model, group=Stage, col=Stage)) +
scale_x_continuous(breaks=c(1998, 2000, 2005, 2010, 2014),
labels = c("1998", "2000", "2005", "2010", "2014"),
minor_breaks = seq(1998,2014,1)) +
scale_color_manual(name="Stage",values = colorclasses) +
scale_shape_manual(values=shapes) +
ylab("Incidence rate (per 100,000)") +
theme_classic() +
theme(
legend.position = "bottom",
legend.title = element_text(size=12, face="bold"),
legend.text = element_text(size=10),
legend.title.align = 0.5,
axis.title = element_text(size = 12, face="bold"),
axis.text = element_text(size=10),
axis.text.x = element_text(angle=45, vjust=0.5)
)
Figure2Export
#ggsave(plot=Figure2Export, filename="Figure2.tiff", path="path/to/folder/DistantCRC_BriefComm", device = "tiff", width=16, height=10, units="cm", dpi = 300)
sessionInfo()
